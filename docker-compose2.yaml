#Полный рабочий вариант
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
      - ./kafka-1-creds/sasl/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
    networks:
      - confluent
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
      ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_OPTS:
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dquorum.cnxn.threads.size=20
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -DjaasLoginRenew=3600000

  kafka-1:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    networks:
      - confluent
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./kafka-1-creds/sasl:/etc/kafka/jaas
      - ./kafka-1-creds/certs:/etc/kafka/secrets
      - ./kafka-1-creds/client.properties:/etc/kafka/client.properties
      - ./kafka-1-creds/user.properties:/etc/kafka/user.properties
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL_SASL_SSL://0.0.0.0:9093,EXTERNAL_SASL_SSL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,INTERNAL_SASL_SSL://kafka-1:9093,EXTERNAL_SASL_SSL://localhost:9094

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL_SASL_SSL:SASL_SSL,EXTERNAL_SASL_SSL:SASL_SSL
      KAFKA_SSL_CLIENT_AUTH: 'required'

      # Меж-брокерное соединение по PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # SASL/PLAIN для внешних клиентов (на SASL_SSL)
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"


      # SSL (TLS) — для всех соединений на SASL_SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds

      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      # KAFKA_OPTS: "-Djavax.net.debug=all"

      #Настройки ACL
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  kafka-2:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9192:9192"
      - "9193:9193"
      - "9194:9194"
    networks:
      - confluent
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./kafka-2-creds/sasl:/etc/kafka/jaas
      - ./kafka-2-creds/certs:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      # Слушаем на всех интерфейсах: PLAINTEXT и SASL_SSL
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9192,INTERNAL_SASL_SSL://0.0.0.0:9193,EXTERNAL_SASL_SSL://0.0.0.0:9194
      # Анонсируем адреса для клиентов
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9192,INTERNAL_SASL_SSL://kafka-2:9193,EXTERNAL_SASL_SSL://localhost:9194

      # Протоколы безопасности для каждого listener-а
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL_SASL_SSL:SASL_SSL,EXTERNAL_SASL_SSL:SASL_SSL
      # Требуем клиентский сертификат при TLS
      KAFKA_SSL_CLIENT_AUTH: 'required'

      # Меж-брокерное соединение по PLAINTEXT (между kafka-1 и kafka-2)
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # SASL/PLAIN для внешних клиентов (все на SASL_SSL)
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      # Super-user для администрирования
      KAFKA_SUPER_USERS: "User:admin"
      # JAAS-конфиг для брокера
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"

      # SSL/TLS — все соединения на SASL_SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds

      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      # Включаем ACL
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  kafka-3:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9292:9292"
      - "9293:9293"
      - "9294:9294"
    networks:
      - confluent
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ./kafka-3-creds/sasl:/etc/kafka/jaas
      - ./kafka-3-creds/certs:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      # Слушаем на всех интерфейсах
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9292,INTERNAL_SASL_SSL://0.0.0.0:9293,EXTERNAL_SASL_SSL://0.0.0.0:9294
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9292,INTERNAL_SASL_SSL://kafka-3:9293,EXTERNAL_SASL_SSL://localhost:9294

      # Протоколы безопасности
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL_SASL_SSL:SASL_SSL,EXTERNAL_SASL_SSL:SASL_SSL
      KAFKA_SSL_CLIENT_AUTH: 'required'

      # Меж-брокерское соединение (если хочешь SASL_SSL — поменяй тут)
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # SASL механизм
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"

      # SSL конфиги
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds

      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      # ACL настройки
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"


volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:


networks:
  confluent: